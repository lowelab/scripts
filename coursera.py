#! /usr/bin/env python

textfile = open("CourseraOutput.txt", 'a') 
textfile.write("\n") 
"""
def PatternCount(text, pattern): #count occurrence of a given pattern in a text
	count = 0
	x = len(text) - len(pattern) +1
#	print("x=", x)
#	for i in range(0, (len(text) - len(pattern)):
	for i in range(0, x):
		if text[i:(i+len(pattern))] == pattern:
			count += 1
	return count
	
#text = "ACTACTGCAGCA"
#pattern = "ACGTGCAAC"

#print PatternCount(text, pattern)


def FrequentWords(text, k):
	freqpatterns = []
	count = [0]*(len(text) - k+1)
#	x = len(text) - k
	for i in range (len(text) - k+1):
#		print i
#		print k
		pattern = text[i:(i+k)]
		count[i] = PatternCount(text, pattern)
#		print i
#		print count
	maxcount = max(count)
#	print maxcount 
	
	for i in range (len(text) - k+1):
		if count[i] == maxcount:
			freqpatterns.append(text[i:(i+k)])
	
	return set(freqpatterns)

text = ""
k = 13
	
print FrequentWords(text, k)
		
#FrequentWords("ACGTGTACGT", 4)

"""
"""
def ReverseComplement(seq):
	basecomplement = {'A': 'T', 'C': 'G', 'G': 'C', 'T': 'A'}
	return "".join([basecomplement[base] for base in reversed(seq)])
	
text = ReverseComplement("")
"""
"""  
def PatternMatch(pattern, genome):
	for i in range (0, (len(genome) - len(pattern) +1)):
		if genome[i:(i+len(pattern))] == pattern:
			textfile.write(str(i) + " ")	

pattern = "CTTGATCAT" 
genome = "PatternMatch(pattern, genome)
"""

	
def PatternCount(text, pattern): #count occurrence of a given pattern in a text
	count = 0
	x = len(text) - len(pattern) +1
	for i in range(0, x):
		if text[i:(i+len(pattern))] == pattern:
			count += 1
	return count


def FrequentWords(text, k, t, l): #return a set of patterns k length appearing at least t times in text (uses PatternCount()function)
#	freqpatterns = []
	count = [0]*(len(text) - k+1)
#	x = len(text) - k
	for i in range (len(text) - k+1):
		pattern = text[i:(i+k)]
		if PatternCount(text, pattern) >= t:
			l.append(text[i:(i+k)])
			print (text[i:(i+k)])
#	if freqpatterns:
#		return set(freqpatterns)


def ClumpedSequences(k, L, t, genome, l):
#	writing = []
	for i in range (0, (len(genome) - L + 1)):
		text = genome[i:(i+L)]
		x = FrequentWords(text, k, t, l)
#		if x:
#			print x
#			writing.extend(x)
#		writing.extend(FrequentWords(text, k, t))
	textfile.write("\t".join(set(l)) + "\t")
	
freqpatterns = []
k= 10
L= 582
t= 16
genome = "CATGGTCTAAAGCTGTGAGCCACTCAGACTGCGTCTGACCGCACCCTATACAGTATGACAGTGCGCATAGTGAGTATACTCTCGGCTGTCGCCGCCTCCGCTGGCGCTGTGGGCTCAAGTCTCCCCCTACATCTTTGGTGACGGTTCGGAATGTGTAAGAGTAGGGAGCTAGGGTATCTATTTACCTCAGACCTCCACTACCCACCAATAGTTTACCCCCACTGGCAAGTTGAGTATGAGAGTGCGCATTTGAGCCGCCGCCAGCCAACGATAGCATTCCTGGTTTCCGGCTAGGTACGTACATAGCTCCGCATTTTCAGACAGTTTGGTGCCTAGGGGATCGACCAACAGGAATTGGAAGCGTGACCTCCCACTGTCTGGAAGCGTTTCCACTGCACGGCCGAACCAGTGCTACCTAACTACGATAGTGCATCACGGCTGGCGGACAGGAGCGTCCCGAGGGTCGCAGATAGGCGCTCACCAGATCAAATTGAGCTCGGGCTCTGCAAACGGCCGGGAGTACTAGTCTCCCCTCCAAGCCTAGTGTGGCCAATTTGACTCAAACATGAATGAGGGGCGATAAGGCTGGCGGTTCAACACGCGGAAACTGTATCCGACGGAACTACTATCATGTGCCGGAACTAGCGCCAGGAGAATTATCTTGCCGGCGTTAACAATTAAAATAAAACGGGCGTCGAATACGGGCAGTTGAACATCGGGGTGAACGCTTTATAAGTTGTGGGATGCGTCTCACACCTGAATTGAATAGGCCTTGGACATAGCGTGCTATTGGGTGCTGTACTGGCCGCATATGCGTCCTCCAAAATACAGCAAAGTCGGGTGTTAGGCAGTTATCAAACCGGGACATCCCAAGGGCCGTTATGCACCAAAGCTATTCGCAAACTTCCTCCTCTCCTAGTTATCCTAGTTAAGTAAATTGAGTAATGACCAGCGTATTGCTCTGTATCACCCGACGAACTGTTCAGAATACGGCGCTCCGTCTTGTCCAGCTGCGCCTGGCTCCTAGTTAACATATGTATAACGCCTCCTAGCAAGTTGCTCGCCAGGCCTCGTGATCTCCAAGTTGCTCCAAGTTGCTCTAGTTACACCTCGCAAGTTGCTCAACTATCTTCCGGCGAAGTCTCCCAAGTTGCTCCGCCTCCAAGTTGCTCCTACTCCAAGTTGCTCCTAGTCAAGTTGCTCTCCTAGTTAGTTACTAAGGACGCAAGTTCAAGTTGCTCTGAACAGCAAGTTGCTCAAGCAAGTTGCTCGCTCTACGGGCAAGTAAAACTCCCAAGTTGCTCAACGTAGATCAGCCTTACCTCCCTCCTAGTTCAAGTTGCTCAGGTTAAGCGGCAAGTTGCTCGTTAATAGAAAGTCTACTCCTAGTTAGCCTGCGCGCTAGACTCCTCCTAGTCTCCTCAAGTTGCTCTTCTCAAGTTGCTCCCACTCAAGTTGCTCAAGTTGCTCAGTTACCTTGAGTTAAGTGCAAGTTGCTCATTCAAGTTGCAAGTTGCTCTTGCTCCGCATTTCCGAGGAACCACGATTTTATGTTCCAAGTTGCTCCAAGCACAAGTTGCTCTTGCATCAGCTCACAAGTTGCTCCTACTCAAGTTGCTCGATGATTCACAAGTTGCTCCTCGCGGCGCCGTCATTGAGTCTAGAAGGACCCAGCACAAGGGTATCGGGGTTGAGATACTGCGTTCTTTTGTGCTCGAGCCTATGCCCGGCCCCAATTTGGTTGTGTAACGCATTTTCCGGGGACATTCGAACGGTACCGAACGCAGGCATCAGCGAACATCGCCCGATAGCCGTATAGCGAGTGAGGCTACGCAGAGCAATTACATGTACTAAGACCCGTAATCCCCTGAAAGAATAATGCGAAAGGTATGCGTGTTGCCTAGGGATGCTTGCCTGGAGGAAGGATAGGCTCACGAGAAGGGGTGGGGTCATTAGTACGCGTTATCCTGTGATCGAAGCGGCCCTGATCTAATGCAAGTCCTGCGCCTGTGATCTGGCAGGTCATTGAGCCAAGATTAATCTTCCAGGGAGAATAGGGCGGACTCACGAGAATAGGGCCCCGGTGAGTGGTCGGCCCGAGTGGGCAGCTGTAATAAGCCACTACCAGAATAGGGCTAGCAATAGAGAATAGGGCGCGAAGAAGAATAGGGCCTCACCAGCATCCCTTGACTCCGAACTCCGTGTGGTATATGTAGAATAGAGAATAGGGCAATCAGAATAGGGCGCAGAATAGGGCAGTTAGAATAGGGCGGCACATAGAAGAATAGGGCAGAATAGGGCGCTCCATAGGGTCACTTGGAGTTAGAATAGGGCACAATCGAATCCGCAGGGTCAGAATAGGGCCTCGCATAGGAGAATAGGGCCCTCTTGCCGTCTGATACGCAATCTAGAATAGGGCTGACCTAAAGAATACCGACTCCCGCAGAATAGGGCCTAGGAGCGGTGATGTAGAATAGGGCTACACTTGAGAAGAATAGGGCGGCAGATAACGGGTCAGACTAGAGAATAGGGCTAGATAGAATAGGGCATCGTATTCCTGTGAGAATAGGGCCCAACAGAATAGGGCAGCGTCAGGTGCGAAAAAGCTACCCACATTGCCAACGATAGCAGTGGCAGGTTTCTGAATAGACCCGCTCACGATAAGCATGAGCACGGCCTTGGTTTTCCGGCCGCTGCGAACCGTCAAACGATTTGCGTCCGTGCTGTTGTGCTATAATGATCTTGGAAAATCGAGACATTGCCTCAACGGAACGTTCATGTTGTCCAGGAGGCGACGAGGCAGCCTTGCTAAAATCTAGGAGCCGCAACCAACTATAGACCCCGGCGGACCTTCACACTGCAACCAGACTGTGTACGAACTCTATGGAACCTCATTCGAAGGTGCGGATTATAGCTATAATCCATACGTGACCTGTGCCACAGGGACAAACAATGTATATGCATGGACCACCCGCCGGGAGGCAAGTAACCTTAGTATCCGGAACGCATACGACAACTACGGGGGTTATTTAAACCGTGGTGGCATACCACACATGTAAGTACTACCGATCAAGTTACCGGATACAAAGATATTTCCAAGTTACCGTATACAAGTTACCGGGGAAGTCAGAATTTTCGCCAAGTTACCGCCTACATGGGAAGTTCTCCCAACGAATCGCGCCAAGTTACCGGGGAATTATGCACAAGTTACCGTACAAGTTACCGGTTACCGGTTACCGAGCAAGTTACCGTTTGCCTTAAAAACAAGTTACCGCAAGTTACCGGGGTATTAAGGCAATTCCCTTGTCCAAGTTACCGCTGTAGACCTTAAGTGGTCACAAGTTACCGCGGCAAGTTACCGGCTCTCAAGTTACCGGGATCGTGTCCGCTACCATATTTCCAAGTTACCGTGTTCGATCACTAGAGAGTACATACGCGCTCCAAGCAAGCAAGTTACCGACCCAAGTTACCGGTTACAAGTTACCGACTGCAAGTTACCGGCAAGTTACCGGAGACCAAGTTACCGACAAGTTACCGATTAAACAAGAAAACAACCCTTAACCCGTGGACAAGTTACCGAGCACATTGCACCCTGCTGGATTGACTTTGAGCGGTACTGCCAAGTTACCGAAGTTACCGTGGTATCCGGTCTATTATCCGAAGGAGTATCTGGATAGGGCAGTGGGGATCGTGGTACGTAGGTATCCGAAGGCCGAAGGTTATCCGAAGGCGGCACTGTCTCACTTTGTAGCGCAAAAGCTATCCGAAGGTTTTATCCGAAGGAAGGCCTTCTTCTTTGGTTGGCTACCCTATTTCCCCCGATGGGGTTATCCGAAGGGAAGGAAGTACATGTTAGCCATCCAGCATCACATATCCGAAGGAGATCGCATCTATCCGAAGGGTATCCGAAGGTTACGATATCCGAAGGGCTAGTCGTTGTATCCGAAGGTGGCTGTAACGCGCTGTTGCGTTTCCTGCATATCCGAAGGAGTAGTCGCGCATGTATGTCCGGCGTGCTTATATCCGAAGTATCCGAAGGCTATCCGAAGGAACAGCTGGTCCAACGCGAGCTGATACGTATCCGAAGGAAATATCCGAAGGGAATCAAGCTGGTCCATATCCGAAGGCGATTATCCGAAGGATCCGAAGGGCTGGTCCAACCATAGCTGGTCCAAAACCACTTCACACCTATATGTGGTGTCCAATTATCCGAAGGGTCCAGCTGGTCCAATATCCGAAGGCCCAGGGCTGGTCCAATACCGCGTGCTTCTGTGAGCTGGTCCAATAGAACCACAGTTCCATTCGAGACTCATTGCAGCTCGTTGTCTGGAAATTTCGCTGGTCCAAGGCTGGTCCAACAAGACAACGCCGATCAGTGATGGTACAGCTGGTCCAATGCAGGGGATGGCTGGTCCAACACGTACCAATGGGCTGGTCCAATGGTCCAAGGAGCTGGTCCAGCTGGTCCAAGACGTAGAGTTACGCTGGTCCAAGATAAAAATACTCACAGCTGGTCCAATGGGCTGGTCCAAATAACGGAGCTGGCTGGTCCAACGCTGGTCCAAATAGGGTCTGTAGTGAGCGGCCCCTACGGAGGATTGGCTGGTCCAAGGTGCTGGTCCAAAATCCGCTGGTCCAGCTGGTCCAAGTTGAATCAGCAGCTAGAAGTTCTAAAGTCCATTCTAATAGAAATCGTGACTTCGCGCGTGCTAATGGTAATGTATTGTATTATCGCCTACACTACGCACCCATGTGGTATTATAGTCCGGAGCACACTCCCCTGCCTTCGCGAGGATAGTTTTTATGCCTGGTCCCTGTACGGCCTAGAGTCGTGCCGTCGACAGCCGCCAGGTAACCTCCGGTACTGGTGAGCTACAGGACCGGTCGAAATTACTGGCAACGAAAACCGGTCTACTCAAATAAACATCGGGCTCAGAAGGCTAAGGGTGGTTCCACGTACCATATCGTCTATTATGATTGCTCGAGTCTCAGGATATATAAATGGCTCGTCGTTCTACAGTCAATAACAAGGGCACGGGCCTCATGGACGGCTCATTCTCTATCCTCCTTACCGATTCGAGGGAGAGCGACAGAGAAGCGAGCTCCGGCTGGGGGGAAGCGCTTCACATTCTAGGACTTGCGCGCGCTAACATTTTATGTCATACTGCCTCCATCCCCAGATAATGAAGGGAGCACTTCAAGTTGAGATATCGCCTCAGTACGCAAACCTACGCGCCCGACCCTATGGTCTGTCTCCCTCGCCTACTCAATTCCTTGTCAGGTTTACTCACACCTTCGTAATTTTTTGCTATGCTGTTCTTTTATCCGTCGCTCCTCGCCATTCTGCGAGGAGATGGACACGCTATGCCACCCCAGGGCCCGTTGTCCTTAAGTGCCCAGTAGGCCTGCAGTTAGCCATCCAATCGATGGTAACACAACGGGGGAAACAGAAGTAGGTAGATAATCCTTCAGGGAGCGATCATGTGAAGTACCTGGCTTGAGGGTCCATCGCAGTCTACTGGGGGGCCCTAAATCTCCCTCTCCCTGGGGTCTGCCTCCCTGGGGCCTCCCTGGGGGGGGATTGGACGGTACTCCCTGGGGAACCTAACTCAGTGCCTCCCTCCCTGGGGACCCATAAACGGTCCCCACTTGGCGCTTCGACGGCGCCCTGGGGTTCCAGACAACCCCAGAGTAAGTGCTCCCTGTTCGACGGCGTCCCTGGGGGGTTCTCCTCCCTGGGGCTCCCTTCGACGGCGGGCGGATCGTCCCGTGCTCCCCTTCGACGGCGACAGTCAAGTTTCAGCTCCCTGTTCGACGGCGCTCTCTTCGACGGCGCGTTCGACGGCGACGGCGAGACTTTTCGACGGCGTTATTCGACGGCGCATCTCATCGCGTTCGACGGCGGCCCTGTTCGACGGCGCCTTTAGCCTCTGCTCCCTGGGGGACTTCGACGGCGCGGCGGAATCCATTGATTCGACGGCGCGTCCGTGGTGTGGTTCGACGGTTCGACGGCGTTCGACGGCTTCGACGGCGAGCTTCGACGGCGGGGCCTGGGGTCGCAGTGTTGTTGTCTCTGCTTCTTCGACGGCGCCTGGGGCTCCCTGGGGTCCGGTAACCACTGGCTTCGACGGCGAGCGAGTCAAGGCCACCCTCATAGCGCTTCGACGGCGCCTCTAGGTCCTCTCCCGCCTCGTGGAAGGATGATTTCGACGGCGTTCGACGGCGGAAATATACCCATTTGTCTCCTTTAGGATCGACTCTTTGAACGTCATGCTTTATTTAAAGAGTGTCGACCTTGCCAAGAAAGGTTTGAAACGAAGTCAAGCGCGTAGCGCGTCGCTGTTCAAGCGCGTCGCAGCGCGTCGCCGCTCATGCAGCGCGTCGCGCACTGCCCCCCCTGTAGCGCGTCGCTTAGAGCTCTTCGCAAGAGAGCGCGTCGCATACCTCACACATTGCTCAGTTATAATCCAGCGCGTCGCTAGCGCGTCGCGCGGAGATTCCCCCTGAGCGCGTCGCTTTAATAGGCGCCTCCTAATCGATGGTCTCGCCCTGCCGGTTAATCATCGTGTTCTGAGCATAGCGCGTCGCACGCCCTTTTGCAGCGCGTCGCCACCTTACTGAAGCGCGTCGCGAAGCGTTTCCCCCGAGCGCGTCGCTCCCCCGTTAGCGCGTCGCCAGCGCGTCGCAGAAAACGTTTCCCCCAGCGCGTCGCCATCCGTTTCCCCAGCGCGTCGCTCGTTAGCGCGTCGCCGTTTCCCCCCCAGCGCGTCGCCAGCGCGTCGCAACCGACCAGTGTGCGTTTCCCCCGAGGACCGAGCGCGTCGCCCGGTAGCGCGTCGCGCAGCGCGTCGCCAGCGCGTCGCTTTCCCCCCGCGTTTCCAGCGCGTCGCAGCGCGTCGCGTTTCCCCCCCCTATAAGTCCATGGAGTCTTTCTTCTATCACCGTTTCCCCCCTCGGCGTTGAGTAGGCGTTTCCCCCGGAGCTAGAGCCTTGCGTTTCCCCCATCGAATAAAAGGTTCACGTTTCCCCCGATGTCACGCGCGTTTCCCCCGGGAAGCTGGAAGCGTTTCCCCCAAGAACGTTTCCCGAATCGTAGCCGTAGCCCCCCCCCCTGTCTGTGAATCGTAGGAATCGTAGCTTCCCCCTCGTTTCCCCCCCGTGAATCGTAGCGACCGTTTCCCCCGGAATCGTAGCCCCCCGTTTCCCCCGGTTAGGAATCGTAGAATCGTGAATCGTAGCATACTGAATCGTAGCGGAATCGTAGCGTCCTCGTCGCAATGCCACCTATGGGAATGCCCCTCACGGTGCACACTGGTAATGAGGGCTATTAGCAAAACAGAATCGTAGCGGTGTTTTGGGAAAACGTCGCCATAATAAGAATCGTAGCCGTGACCCTTCCTGCTGAAGAGAATCGTAGCGGAACGATTCTTCAATATCGTTCCCGAAGAATCGTAGCGTAGCTAGAATCGTAGCCCAACTTCCGAAGGAATCGTAGCAAAGGGAATCGTAGCAATCGTGAATCGTAGCCCCATTCGAATCGTAGCTTAAATGTGAATCGTGAATCGTAGCGAATCGTAGCAAGATTTGATGTTGGCGGAGTCTTGAATCGTAGCATCGTAGCGGAATCGTAGCTGACTCTCTTATCATATGCGCCGAGCTAGACTACGATACCCCCTCGTTCGTCAGTTTTCTCCCGCCTGGATAGCTGAATCCGTACAGAAGCAGTCGCCATGTATTTGACGGTGTCCAAAAATGATTGTGGAGTGGCGTCACTCGAGTGCAAGAGTTCACTTTTACGTATATTGCGTCATTACAAGCCCTTACCGTATCGATACATGGTTGGTCACAGCTTCCCCCATGATGGAGTTGTCAGGAGGCCCAACTGACTTTATACTTGTAGTAAGCCCTAGTTGGTGGGTTCCAATGACAAGAGTAGTTCTAAGGTATTAATAGGTGGGCCATCCATCTCCATAGTGTCAAATGCACGGACTCGCAGAGTCGGTCGTTCCTTCTTATACAAAGAGTACCTTTTATTGTCCTGAAGCATTCAACTACCTACGGTTTGCCTTCGCTGTAGCATTGTGCGCGGGACACCTTGGTAATAGACCATCTAGGTGATAGTGATGCTCCGAAAAGCCACACTCATTATGCCACGCAGGTGAGACTTTCAGTGTAAAGGATGAAGCTCCTGCGGGATATCCTAACATAATCCGGTGTGAGCGTTTGGACTATTATAACAATTTATTGAGTTTTACGAATTTCGCTTACGGGCTTTTTACAGGTACTGCGTTTGGTAACATATCCGCAAGTCCTAACAGGCCCGATCTGTCTGTGGTCCCGTTGAAGCCATGGTGGATGCAAGTTTTGTCGCTACTGCATCGACCGTACCGAGGCTGATTGATAAACCTGACCGGACGCTTTTCCATGACGTTCATGATGCGATGAAGATTTTATAAGATTTGGAGTCCGAGAGTTCCGCAGTTGTCTGCGCGCAGATCCGGATTAGCTTCAGGGAGCATGTCTTGTTCGACAAACTGGAATCAAAGCAAGGGCTATGGGCGTGGAGACCCCTCGTCTGAGTGCCTGGCCTTCCTAAATGGGGTCACAAAGCGTCGATGGAACATGGAACTAGTTGATGATGGAACTAGGAGGCAGCGCCAATTGATGGAACTAGCTAGGCGAACATGGAACTAGACCAGAAATGGAACTAGCATGGAACTAGTCATGGAACTAGGGAACTAGGACGATGCATAGCGTTCGATGCCGCCTGTTTTTGAGAAGATGGAACTAGCCAATGTGCGCAAATGAATGGCTCTCCCAACTCGACTGAAAGCCGTTGAGCATCGTTAGCACCCCTTCTTGCCACGAGCAGGGATTGATGAGACATTGGTACTCGGACCCAATGGAACTAGGTGGGCCCTGTATGGAACTAGTAGTCGTAAGGACTTTCTGGATGGAACTATGGAACTAGGGATAGGATATTCTGGGATATTCTGGGATATTCTGGATGGAACTAGTAGGATATTATGGAACTAATGGAACTAGGGAACTAGGATATGGGATATTATATGGAACTAGGGTTCTGGGATAGATATTCTGGGATATTCTGGGATATTTTCTGGGATACTGGGATATGGAACTAGATTCTATGGAACTAGGGGATGGAACTAGATATTCTGGGATAAATGGAACATGGAACTAGTAG"
ClumpedSequences(k, L, t, genome, freqpatterns)

textfile.write("\n")
#textfile.write(text + "\n")

textfile.close()
